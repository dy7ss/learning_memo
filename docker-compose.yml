version: '3'

services:
  web:
    container_name: web
    build:
      dockerfile: web/Dockerfile
      context: .
    ports:
      - '5173:5173'
    volumes:
      - type: bind
        source: ./web/src
        target: /src
    tty: true
    networks:
      - app-net

  db:
    image: postgres:14
    container_name: postgres_pta
    ports:
      - 5432:5432
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'postgres'
    networks:
      - app-net
# volumes:
#   db-store:




  api:
    container_name: api2
    build:
      dockerfile: api2/Dockerfile
      context: .
    ports:
      - '3000:3000'
    volumes:
      - type: bind
        source: ./api2
        target: /src
    tty: true
    networks:
      - app-net
#   db:
#     container_name: db
#     build:
#       dockerfile: ./db/Dockerfile
#       context: .
#     volumes:
#       - type: volume
#         source: docker-practice-db-store
#         target: /var/lib/mysql
#       - type: bind
#         source: db/init.sql
#         target: /docker-entrypoint-initdb.d/init.sql
#     environment:
#       MYSQL_ROOT_PASSWORD: rootpassword
#       MYSQL_USER: hoge
#       MYSQL_PASSWORD: password
#       MYSQL_DATABASE: event

# volumes:
#   docker-practice-db-store:

networks:
  app-net:
    driver: bridge
